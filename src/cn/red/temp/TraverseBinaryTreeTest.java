package cn.red.temp;

/**
 * 二叉树的遍历：
 *     1.前序遍历
 *     2.中序遍历
 *     3.后序遍历
 * 三种遍历的相互推导：
 *     前+中--》后
 *     前+后--》中
 *     中+后--》前
 * 
 * 树的综合操作：
 *     1.重建二叉树（面试题7）
 *     2.树的子结构（面试题26）
 *     3.二叉树的镜像（面试题27）
 *     4.对称的二叉树（面试题28）
 *     5.从上到下打印二叉树（面试题32）
 *     6.二叉搜索树的后序遍历序列（面试题33）
 *     7.二叉树中和为某一值的路径（面试题34）
 *     8.二叉搜索树与双向链表（面试题36）
 *     9.序列化二叉树（面试题37）
 *     10.二叉搜索树的第k大节点（面试题54）
 *     11.二叉树的深度（面试题55）        
 * @author Administrator
 *
 */
public class TraverseBinaryTreeTest {
	
}
