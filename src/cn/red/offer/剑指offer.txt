面试题2：单例模式的实现
	①饿汉式
	②懒汉式
	题目：设计一个类，我们只能生成该类的一个实例
	基本思想：
	实现代码(Java)：

面试题3：二维数组中的查找
	题目：在一个二维数组中，每一行都按照从左到右
	基本思想：
	实现代码(Java)：

面试题4：替换空格
	题目：
	基本思想：
	实现代码(Java)：

面试题5：从尾到头打印链表
	题目：
	基本思想：
	实现代码(Java):

面试题6：重建二叉树
	题目：
	基本思想：
	实现代码(Java):

面试题7：用两个栈实现队列
	题目：
	基本思想：
	实现代码(Java):
	

面试题8：旋转数组的最小数字
	考虑特例：在两个排序子数组中，第一个数字、最后一个数字和中间数字都是1，我们无法确定中间的数字1属于第一个递增子数组还是属于第二个递增子数组。
	因此，当两个指针指向的数字及它们中间的数字三者相同的时候，我们无法判断中间的数字是位于前面的子数组中还是后面的子数组中，也就无法移动两个指针来缩小查找的范围。
	
	题目：
	基本思想：
	实现代码(Java):
	
面试题9：斐波那契数列
	题目：
	基本思想：
	实现代码(Java):

面试题10：二进制中1的个数
	分析总结：把一个整数减去1，再和原整数做与运算，会把该整数最右边一个1变成0。那么一个整数的二进制表示中有多少个1，就可以进行多少次这样的操作。
	
	题目：
	基本思想：
	实现代码(Java):
	
面试题11：数值的整数次方 double Power(double base, int exponent)
	题目：
	基本思想：
	实现代码(Java):
	
面试题12：打印1到最大的n位数
	题目：
	基本思想：
	实现代码(Java):

面试题13：在O(1)时间删除链表结点
	在单向链表中,结点中没有指向前一个结点的指针,所以只好从链表的头结点开始顺序查找
	
	题目：
	基本思想：
	实现代码(Java):
	
面试题14:调整数组顺序是奇数位于偶数前面
	题目:输入一个整数数组,实现一个函数来调整该数组中数字的顺序,使得所有技术位于数组的前半部分,所有偶数位于数组的后半部分.
	
	题目：
	基本思想：
	实现代码(Java):
	
面试题15：链表中倒数第k个结点
	题目：
	基本思想：
	实现代码(Java):

面试题16：反转链表
	题目：
	基本思想：
	实现代码(Java):
	
面试题17：合并两个排序的链表
	题目：输入两个递增排序的链表，合并这两个链表并使新链表中的结点仍然是按照递增排序的。
	
	题目：
	基本思想：
	实现代码(Java):
	
面试题18：树的子结构
	题目：输入两颗二叉树A和B，判断B是不是A的子结构	
	题目：
	基本思想：
	实现代码(Java):		

面试题19：二叉树的镜像
	题目：请完成一个函数，输入一个二叉树，该函数输出它的镜像。
	基本思想：求树的镜像的过程其实就是在遍历树的同时交换非叶结点的左右子结点。
		① 不妨先在树中交换根结点的两个子结点
		② 交换根结点的两个子结点之后，继续交换着两个结点的左右子结点，直到遍历完所有的非叶子结点。
	求一棵树的镜像的过程：我们先前序遍历这棵树的每个结点，如果遍历到的结点有子结点，就交换它的两个子结点。
	当交换完所有非叶子结点的左右子结点之后，就得到了树的镜像。
		
	实现代码(Java):
	
面试题20：顺时针打印矩阵
	题目：输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。
	
面试题21：包含min函数的栈
	题目：定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的min函数。在该栈中，调用min、push及pop的时间复杂度都是O(1)。	
	
面试题22：栈的压入、弹出序列		
	总结上述入栈、出栈的过程，我们可以找到判断一个序列是不是栈的弹出序列的规律：
		如果下一个弹出的数字刚好是栈顶数字，那么直接弹出
		如果下一个弹出的数字不在栈顶，我们把压栈序列中还没有入栈的数字压入辅助栈，直到把下一个需要弹出的数字压入栈顶为止
		如果所有数字都压入了栈了仍然没有找到下一个弹出的数字，那么该序列不可能是一个弹出序列

面试题23：从上往下打印二叉树
	题目：从上往下打印二叉树的每个结点，同一层的结点按照从左到右的顺序打印。
	
面试题24：二叉搜索树的后序遍历序列
	题目：输入一个整数数组，判断该数组是不是某二叉搜索树的后续遍历的结果。如果是则返回true，否则返回false。假设输入的数组的任意两个数字都互不相同。
	基本思想：在后序遍历得到的序列中，最后一个数字是树的根结点的值。数组中前面的数字可以分为两部分：第一部分是左子树结点的值，它们都比根结点的值小；
		第二部分是右子树结点的值，它们都比根结点的值大。
	
7月19日：	
面试题25：二叉树中和为某一值的路径	
	题目：输入一棵二叉树和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。

面试题26：复杂链表的复制
	
面试题27：二叉搜索树与双向链表
	题目：输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。		
	
7月22日：
面试题29：数组中出现次数超过一半的数字
	解法一：基于Partition的O(n)

面试题30：最小的k个数		

面试题31：连续子数组的最大和	

面试题33：把数组排成最小的数		
		